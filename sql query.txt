
CREATE TABLE users (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    nama_lengkap VARCHAR(100) NOT NULL,
    role VARCHAR(20) DEFAULT 'teacher' CHECK (role IN ('admin', 'teacher')),
    mapel VARCHAR(50),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);


CREATE TABLE mapel (
    id SERIAL PRIMARY KEY,
    nama_mapel VARCHAR(100) NOT NULL UNIQUE,
    kode_mapel VARCHAR(10),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);


CREATE TABLE siswa (
    id SERIAL PRIMARY KEY,
    nama VARCHAR(100) NOT NULL,
    kelas VARCHAR(10) NOT NULL,
    nis VARCHAR(20) UNIQUE,
    jenis_kelamin VARCHAR(10) CHECK (jenis_kelamin IN ('L', 'P')),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);


CREATE TABLE presensi (
    id SERIAL PRIMARY KEY,
    siswa_id INTEGER NOT NULL REFERENCES siswa(id) ON DELETE CASCADE,
    tanggal DATE NOT NULL,
    mapel_id INTEGER NOT NULL REFERENCES mapel(id) ON DELETE CASCADE,
    guru_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    status VARCHAR(20) DEFAULT 'Alpha' CHECK (status IN ('Hadir', 'Sakit', 'Ijin', 'Alpha', 'Dispen')),
    kelas VARCHAR(10) NOT NULL,
    keterangan TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- Unique constraint to prevent duplicate entries
    UNIQUE(siswa_id, tanggal, mapel_id, guru_id)
);


CREATE TABLE jurnal (
    id SERIAL PRIMARY KEY,
    tanggal DATE NOT NULL,
    kelas VARCHAR(10) NOT NULL,
    mapel_id INTEGER NOT NULL REFERENCES mapel(id) ON DELETE CASCADE,
    jam_awal INTEGER NOT NULL CHECK (jam_awal >= 1 AND jam_awal <= 11),
    jam_akhir INTEGER NOT NULL CHECK (jam_akhir >= 1 AND jam_akhir <= 11),
    jumlah_hadir INTEGER DEFAULT 0 CHECK (jumlah_hadir >= 0),
    jumlah_tidak_hadir INTEGER DEFAULT 0 CHECK (jumlah_tidak_hadir >= 0),
    nama_tidak_hadir TEXT,
    kegiatan TEXT NOT NULL,
    materi TEXT,
    keterangan TEXT,
    guru_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- Constraint to ensure jam_akhir >= jam_awal
    CHECK (jam_akhir >= jam_awal)
);



-- Users indexes
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_users_is_active ON users(is_active);

-- Siswa indexes
CREATE INDEX idx_siswa_kelas ON siswa(kelas);
CREATE INDEX idx_siswa_nama ON siswa(nama);
CREATE INDEX idx_siswa_is_active ON siswa(is_active);

-- Presensi indexes
CREATE INDEX idx_presensi_tanggal ON presensi(tanggal);
CREATE INDEX idx_presensi_siswa_id ON presensi(siswa_id);
CREATE INDEX idx_presensi_guru_id ON presensi(guru_id);
CREATE INDEX idx_presensi_mapel_id ON presensi(mapel_id);
CREATE INDEX idx_presensi_kelas ON presensi(kelas);
CREATE INDEX idx_presensi_status ON presensi(status);

-- Jurnal indexes
CREATE INDEX idx_jurnal_tanggal ON jurnal(tanggal);
CREATE INDEX idx_jurnal_guru_id ON jurnal(guru_id);
CREATE INDEX idx_jurnal_mapel_id ON jurnal(mapel_id);
CREATE INDEX idx_jurnal_kelas ON jurnal(kelas);


-- Insert default users
INSERT INTO users (username, password, nama_lengkap, role, mapel, is_active) VALUES
('admin', 'admin123', 'Administrator Sistem', 'admin', NULL, true),
('guru1', 'guru123', 'Contoh, S.Pd', 'teacher', 'Matematika', true)
ON CONFLICT (username) DO NOTHING;





CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create triggers for automatic updated_at
CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_mapel_updated_at BEFORE UPDATE ON mapel
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_siswa_updated_at BEFORE UPDATE ON siswa
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_presensi_updated_at BEFORE UPDATE ON presensi
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_jurnal_updated_at BEFORE UPDATE ON jurnal
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();


GRANT USAGE ON SCHEMA public TO authenticated;
GRANT ALL ON ALL TABLES IN SCHEMA public TO authenticated;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO authenticated;
GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO authenticated;



ALTER TABLE presensi ENABLE ROW LEVEL SECURITY;

CREATE POLICY "presensi_access_policy" 
ON presensi FOR ALL 
TO authenticated, anon
USING (
    -- Admin bisa akses semua data
    EXISTS (
        SELECT 1 FROM users 
        WHERE users.id = presensi.guru_id 
        AND users.role = 'admin'
    )
    OR 
    -- Guru hanya bisa akses data mereka sendiri
    EXISTS (
        SELECT 1 FROM users 
        WHERE users.id = presensi.guru_id 
        AND users.role = 'teacher'
    )
)
WITH CHECK (
    -- Untuk insert/update, pastikan guru_id sesuai dengan user yang login
    true -- Sementara izinkan semua untuk testing
);

2. Policy untuk Tabel Jurnal
-- Aktifkan RLS untuk jurnal
ALTER TABLE jurnal ENABLE ROW LEVEL SECURITY;

-- Policy untuk jurnal
CREATE POLICY "jurnal_access_policy" 
ON jurnal FOR ALL 
TO authenticated, anon
USING (
    -- Admin bisa akses semua data
    EXISTS (
        SELECT 1 FROM users 
        WHERE users.id = jurnal.guru_id 
        AND users.role = 'admin'
    )
    OR 
    -- Guru hanya bisa akses data mereka sendiri
    EXISTS (
        SELECT 1 FROM users 
        WHERE users.id = jurnal.guru_id 
        AND users.role = 'teacher'
    )
)
WITH CHECK (true);



INSERT INTO mapel (nama_mapel, kode_mapel) VALUES
('Antropologi', 'ANT'),
('Bahasa Arab', 'BAR'),
('Bahasa Bali', 'BALI'),
('Bahasa Daerah Lainnya', 'BDL'),
('Bahasa Indonesia', 'BIND'),
('Bahasa Indonesia Tingkat Lanjut', 'BINDL'),
('Bahasa Inggris', 'BING'),
('Bahasa Inggris Tingkat Lanjut', 'BINGL'),
('Bahasa Jawa', 'BJW'),
('Bahasa Jepang', 'BJPN'),
('Bahasa Jerman', 'BJERM'),
('Bahasa Korea', 'BKOR'),
('Bahasa Madura', 'BMAD'),
('Bahasa Mandarin', 'BMAN'),
('Bahasa Prancis', 'BPRC'),
('Bahasa Sunda', 'BSUN'),
('Biologi', 'BIO'),
('Ekonomi', 'EKO'),
('Fisika', 'FIS'),
('Geografi', 'GEO'),
('Ilmu Pengetahuan Alam', 'IPA'),
('Ilmu Pengetahuan Alam dan Sosial', 'IPAS'),
('Ilmu Pengetahuan Sosial', 'IPS'),
('Informatika', 'INF'),
('Kimia', 'KIM'),
('Koding dan Kecerdasan Artifisial', 'KKA'),
('Matematika', 'MTK'),
('Matematika Tingkat Lanjut', 'MTKL'),
('Muatan Lokal Lain-lain', 'MULOK'),
('Pendidikan Agama Buddha', 'PAB'),
('Pendidikan Agama Hindu', 'PAH'),
('Pendidikan Agama Islam', 'PAI'),
('Pendidikan Agama Katolik', 'PAKAT'),
('Pendidikan Agama Kepercayaan', 'PAKTP'),
('Pendidikan Agama Khonghucu', 'PAKH'),
('Pendidikan Agama Kristen', 'PAK'),
('PJOK', 'PJOK'),
('Pendidikan Pancasila', 'PPKN'),
('Prakarya Budi Daya', 'PRBD'),
('Prakarya dan Kewirausahaan Budi Daya', 'PKBD'),
('Prakarya dan Kewirausahaan Kerajinan', 'PKKR'),
('Prakarya dan Kewirausahaan Pengolahan', 'PKPG'),
('Prakarya dan Kewirausahaan Rekayasa', 'PKRK'),
('Prakarya Kerajinan', 'PRKR'),
('Prakarya Pengolahan', 'PRPG'),
('Prakarya Rekayasa', 'PRRK'),
('Sejarah', 'SEJ'),
('Sejarah Tingkat Lanjut', 'SEJL'),
('Seni Musik', 'SENM'),
('Seni Rupa', 'SENR'),
('Seni Tari', 'SENT'),
('Seni Teater', 'SENTE'),
('Sosiologi', 'SOS'),
('Tematik', 'TEMA')
ON CONFLICT (nama_mapel) DO NOTHING;
